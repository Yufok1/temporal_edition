{"numFailedTestSuites":36,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":16,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":36,"numTodoTests":0,"numTotalTestSuites":37,"numTotalTests":16,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1750200863291,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1052:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1122:165\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\benchmarks\\report.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m20\u001b[0m             if (metric && metric.value >= threshold) {\n    \u001b[7m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m42\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m42\u001b[0m                         await services.emailQueue.add(job);\n    \u001b[7m  \u001b[0m \u001b[91m                                                  ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m67\u001b[0m                         await services.emailQueue.add(jobWithLargeData);\n    \u001b[7m  \u001b[0m \u001b[91m                                                  ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m75\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m86\u001b[0m                     await Promise.all(jobs.map(job => services.emailQueue.add(job)));\n    \u001b[7m  \u001b[0m \u001b[91m                                                                          ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m108\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m108\u001b[0m                         await services.emailQueue.add(job);\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m130\u001b[0m:\u001b[93m80\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m130\u001b[0m                         await Promise.all(batch.map(job => services.emailQueue.add(job)));\n    \u001b[7m   \u001b[0m \u001b[91m                                                                               ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m151\u001b[0m:\u001b[93m80\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m151\u001b[0m                         await Promise.all(batch.map(job => services.emailQueue.add(job)));\n    \u001b[7m   \u001b[0m \u001b[91m                                                                               ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m171\u001b[0m:\u001b[93m75\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m171\u001b[0m                     await Promise.all(jobs.map(job => services.emailQueue.add(job)));\n    \u001b[7m   \u001b[0m \u001b[91m                                                                          ~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/MonitoringValidation.test.ts\u001b[0m:\u001b[93m192\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'add' does not exist on type 'EmailQueueService'.\n\n    \u001b[7m192\u001b[0m                         await services.emailQueue.add(job);\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\benchmarks\\MonitoringValidation.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/benchmarks/QueueBenchmarks.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../types\"' has no exported member 'NotificationPriority'.\n\n    \u001b[7m2\u001b[0m import { NotificationPriority } from '../../types';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/QueueBenchmarks.test.ts\u001b[0m:\u001b[93m95\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'options.batchSize' is possibly 'undefined'.\n\n    \u001b[7m95\u001b[0m                             const batch = jobs.slice(i, i + options.batchSize);\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/benchmarks/QueueBenchmarks.test.ts\u001b[0m:\u001b[93m127\u001b[0m:\u001b[93m72\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; index: number; }; }' is not assignable to parameter of type 'EmailJobData'.\n      Type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; index: number; }; }' is missing the following properties from type 'EmailJobData': recipient, type\n\n    \u001b[7m127\u001b[0m                         jobs.map(job => services.emailQueue.addToQueue(job))\n    \u001b[7m   \u001b[0m \u001b[91m                                                                       ~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\benchmarks\\QueueBenchmarks.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["SodiumCryptoProvider","Key Generation"],"duration":38,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Key Generation should generate valid encryption key pairs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1750200894430,"status":"passed","title":"should generate valid encryption key pairs"},{"ancestorTitles":["SodiumCryptoProvider","Key Generation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Key Generation should generate valid signing key pairs","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1750200894468,"status":"passed","title":"should generate valid signing key pairs"},{"ancestorTitles":["SodiumCryptoProvider","Key Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Key Generation should generate unique key pairs","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1750200894470,"status":"passed","title":"should generate unique key pairs"},{"ancestorTitles":["SodiumCryptoProvider","Signing and Verification"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Signing and Verification should sign and verify messages correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1750200894473,"status":"passed","title":"should sign and verify messages correctly"},{"ancestorTitles":["SodiumCryptoProvider","Signing and Verification"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Signing and Verification should reject invalid signatures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894476,"status":"passed","title":"should reject invalid signatures"},{"ancestorTitles":["SodiumCryptoProvider","Signing and Verification"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Signing and Verification should handle empty messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894478,"status":"passed","title":"should handle empty messages"},{"ancestorTitles":["SodiumCryptoProvider","Signing and Verification"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Signing and Verification should handle large messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894479,"status":"passed","title":"should handle large messages"},{"ancestorTitles":["SodiumCryptoProvider","Encryption and Decryption"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Encryption and Decryption should encrypt and decrypt data correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1750200894486,"status":"passed","title":"should encrypt and decrypt data correctly"},{"ancestorTitles":["SodiumCryptoProvider","Encryption and Decryption"],"duration":24,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Encryption and Decryption should fail to decrypt with wrong key","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894489,"status":"passed","title":"should fail to decrypt with wrong key"},{"ancestorTitles":["SodiumCryptoProvider","Encryption and Decryption"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Encryption and Decryption should handle empty messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894513,"status":"passed","title":"should handle empty messages"},{"ancestorTitles":["SodiumCryptoProvider","Encryption and Decryption"],"duration":319,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Encryption and Decryption should handle large messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894523,"status":"passed","title":"should handle large messages"},{"ancestorTitles":["SodiumCryptoProvider","Encryption and Decryption"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Encryption and Decryption should produce different ciphertexts for same plaintext","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894842,"status":"passed","title":"should produce different ciphertexts for same plaintext"},{"ancestorTitles":["SodiumCryptoProvider","Security Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Security Properties should not expose private key material","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894844,"status":"passed","title":"should not expose private key material"},{"ancestorTitles":["SodiumCryptoProvider","Security Properties"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Security Properties should handle invalid input gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894847,"status":"passed","title":"should handle invalid input gracefully"},{"ancestorTitles":["SodiumCryptoProvider","Algorithm Information"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Algorithm Information should return the correct algorithm name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1750200894849,"status":"passed","title":"should return the correct algorithm name"},{"ancestorTitles":["SodiumCryptoProvider","Performance"],"duration":95,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"SodiumCryptoProvider Performance should handle multiple operations efficiently","invocations":1,"location":null,"numPassingAsserts":101,"retryReasons":[],"startAt":1750200894850,"status":"passed","title":"should handle multiple operations efficiently"}],"endTime":1750200894950,"message":"","name":"P:\\Jeff Stuff\\temporal_edition\\src\\crypto\\tests\\SodiumCryptoProvider.test.ts","startTime":1750200868618,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './ACL_CAT' from 'node_modules/@redis/client/dist/lib/commands/index.js'\n\n    Require stack:\n      node_modules/@redis/client/dist/lib/commands/index.js\n      node_modules/@redis/client/dist/lib/client/index.js\n      node_modules/@redis/client/dist/index.js\n      node_modules/redis/dist/index.js\n      src/__tests__/integration/setup.ts\n      src/__tests__/benchmarks/setup.ts\n      src/__tests__/benchmarks/InfrastructureBenchmarks.test.ts\n\n\n    However, Jest was able to find:\n    \t'./ACL_CAT.d.ts'\n    \t'./ACL_CAT.js.map'\n    \t'./ACL_CAT.d.ts.map'\n\n    You might want to include a file extension in your import, or update your 'moduleFileExtensions', which is currently ['ts', 'tsx', 'js', 'jsx', 'json', 'node'].\n\n    See https://jestjs.io/docs/configuration#modulefileextensions-arraystring\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { createClient } \u001b[36mfrom\u001b[39m \u001b[32m'redis'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mCounter\u001b[39m\u001b[33m,\u001b[39m \u001b[33mRegistry\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'prom-client'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailQueueService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailQueueService'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailService'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/commands/index.ts\u001b[2m:2:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/client/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/index.ts\u001b[2m:15:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/redis/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/__tests__/integration/setup.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/__tests__/benchmarks/setup.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/benchmarks/InfrastructureBenchmarks.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\benchmarks\\InfrastructureBenchmarks.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './ACL_CAT' from 'node_modules/@redis/client/dist/lib/commands/index.js'\n\n    Require stack:\n      node_modules/@redis/client/dist/lib/commands/index.js\n      node_modules/@redis/client/dist/lib/client/index.js\n      node_modules/@redis/client/dist/index.js\n      node_modules/redis/dist/index.js\n      src/__tests__/integration/setup.ts\n      src/__tests__/benchmarks/setup.ts\n\n\n    However, Jest was able to find:\n    \t'./ACL_CAT.d.ts'\n    \t'./ACL_CAT.js.map'\n    \t'./ACL_CAT.d.ts.map'\n\n    You might want to include a file extension in your import, or update your 'moduleFileExtensions', which is currently ['ts', 'tsx', 'js', 'jsx', 'json', 'node'].\n\n    See https://jestjs.io/docs/configuration#modulefileextensions-arraystring\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { createClient } \u001b[36mfrom\u001b[39m \u001b[32m'redis'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mCounter\u001b[39m\u001b[33m,\u001b[39m \u001b[33mRegistry\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'prom-client'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailQueueService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailQueueService'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailService'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/commands/index.ts\u001b[2m:2:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/client/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/index.ts\u001b[2m:15:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/redis/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/__tests__/integration/setup.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/benchmarks/setup.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\benchmarks\\setup.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './maps/america' from 'node_modules/@colors/colors/lib/colors.js'\n\n    Require stack:\n      node_modules/@colors/colors/lib/colors.js\n      node_modules/@colors/colors/safe.js\n      node_modules/logform/colorize.js\n      node_modules/logform/levels.js\n      node_modules/logform/index.js\n      node_modules/winston/lib/winston.js\n      src/utils/logger.ts\n      src/services/SystemOrchestrator.ts\n      src/__tests__/integration/system.test.ts\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m winston \u001b[36mfrom\u001b[39m \u001b[32m'winston'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m winston\u001b[33m.\u001b[39mcreateLogger({\n     \u001b[90m 4 |\u001b[39m     level\u001b[33m:\u001b[39m \u001b[32m'info'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/lib/colors.js\u001b[2m:198:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/safe.js\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/colorize.js\u001b[2m:3:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/levels.js\u001b[2m:3:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/index.js\u001b[2m:16:18)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/winston/lib/winston.js\u001b[2m:10:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/utils/logger.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/services/SystemOrchestrator.ts\u001b[2m:3:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/system.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\integration\\system.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../types\"' has no exported member 'NotificationPriority'.\n\n    \u001b[7m2\u001b[0m import { NotificationPriority } from '../../types';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m24\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m24\u001b[0m                 to: 'test@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m39\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m39\u001b[0m             expect(completedMetric?.value).toBe(1);\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m48\u001b[0m                 to: 'test@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m63\u001b[0m             expect(failedMetric?.value).toBe(1);\n    \u001b[7m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m70\u001b[0m                     to: 'test1@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m77\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m77\u001b[0m                     to: 'test2@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m93\u001b[0m             expect(queueSizeMetric?.value).toBe(2);\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m104\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m104\u001b[0m                 to: 'test@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'JobId' is not assignable to parameter of type 'string'.\n      Type 'number' is not assignable to type 'string'.\n\n    \u001b[7m115\u001b[0m             await services.emailQueue.retryFailedJob(job.id);\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m125\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m125\u001b[0m             expect(retryMetric?.value).toBe(1);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m131\u001b[0m                 to: 'test@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m146\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'. Did you mean 'values'?\n\n    \u001b[7m146\u001b[0m             expect(processingTimeMetric?.value).toBeGreaterThan(0);\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/prom-client/index.d.ts\u001b[0m:\u001b[93m207\u001b[0m:\u001b[93m2\u001b[0m\n        \u001b[7m207\u001b[0m  values: T[];\n        \u001b[7m   \u001b[0m \u001b[96m ~~~~~~\u001b[0m\n        'values' is declared here.\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m155\u001b[0m                     to: 'test1@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m162\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m162\u001b[0m                     to: 'test2@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m177\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'labels' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'.\n\n    \u001b[7m177\u001b[0m             expect(completedMetric?.labels).toContainEqual(\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/PrometheusIntegration.test.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'labels' does not exist on type 'MetricObjectWithValues<MetricValue<string>>'.\n\n    \u001b[7m180\u001b[0m             expect(completedMetric?.labels).toContainEqual(\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\integration\\PrometheusIntegration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../../types\"' has no exported member 'NotificationPriority'.\n\n    \u001b[7m2\u001b[0m import { NotificationPriority } from '../../types';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; }; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m26\u001b[0m                 to: 'test@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m53\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; index: number; }; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m53\u001b[0m                         to: `test${i}@example.com`,\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m80\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; priority: any; }; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m80\u001b[0m                         to: 'test@example.com',\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; metadata: { test: boolean; }; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m103\u001b[0m                 to: 'test@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m118\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'JobId' is not assignable to parameter of type 'string'.\n      Type 'number' is not assignable to type 'string'.\n\n    \u001b[7m118\u001b[0m             await services.emailQueue.retryFailedJob(job.id);\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m133\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m133\u001b[0m                     to: 'test1@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/integration/RedisIntegration.test.ts\u001b[0m:\u001b[93m140\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ to: string; subject: string; text: string; html: string; priority: any; }' is not assignable to parameter of type 'EmailJobData'.\n      Object literal may only specify known properties, and 'to' does not exist in type 'EmailJobData'.\n\n    \u001b[7m140\u001b[0m                     to: 'test2@example.com',\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\integration\\RedisIntegration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/harmonics/tests/RecursiveFeedbackLoop.test.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7016: \u001b[0mCould not find a declaration file for module 'uuid'. 'P:/Jeff Stuff/temporal_edition/node_modules/uuid/dist/index.js' implicitly has an 'any' type.\n      Try `npm i --save-dev @types/uuid` if it exists or add a new declaration (.d.ts) file containing `declare module 'uuid';`\n\n    \u001b[7m1\u001b[0m import { v4 as uuidv4 } from 'uuid';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\harmonics\\tests\\RecursiveFeedbackLoop.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './ACL_CAT' from 'node_modules/@redis/client/dist/lib/commands/index.js'\n\n    Require stack:\n      node_modules/@redis/client/dist/lib/commands/index.js\n      node_modules/@redis/client/dist/lib/client/index.js\n      node_modules/@redis/client/dist/index.js\n      node_modules/redis/dist/index.js\n      src/__tests__/integration/setup.ts\n\n\n    However, Jest was able to find:\n    \t'./ACL_CAT.d.ts'\n    \t'./ACL_CAT.js.map'\n    \t'./ACL_CAT.d.ts.map'\n\n    You might want to include a file extension in your import, or update your 'moduleFileExtensions', which is currently ['ts', 'tsx', 'js', 'jsx', 'json', 'node'].\n\n    See https://jestjs.io/docs/configuration#modulefileextensions-arraystring\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { createClient } \u001b[36mfrom\u001b[39m \u001b[32m'redis'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mCounter\u001b[39m\u001b[33m,\u001b[39m \u001b[33mRegistry\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'prom-client'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailQueueService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailQueueService'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'../../EmailService'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/commands/index.ts\u001b[2m:2:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/lib/client/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@redis/client/index.ts\u001b[2m:15:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/redis/index.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/setup.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\integration\\setup.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/harmonics/implementations/DataHashHarmonicSignatureProvider.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7016: \u001b[0mCould not find a declaration file for module 'uuid'. 'P:/Jeff Stuff/temporal_edition/node_modules/uuid/dist/index.js' implicitly has an 'any' type.\n      Try `npm i --save-dev @types/uuid` if it exists or add a new declaration (.d.ts) file containing `declare module 'uuid';`\n\n    \u001b[7m1\u001b[0m import { v4 as uuidv4 } from 'uuid';\n    \u001b[7m \u001b[0m \u001b[91m                             ~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\harmonics\\tests\\DataHashHarmonicSignatureProvider.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/utils/environment.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2613: \u001b[0mModule '\"P:/Jeff Stuff/temporal_edition/src/config\"' has no default export. Did you mean to use 'import { config } from \"P:/Jeff Stuff/temporal_edition/src/config\"' instead?\n\n    \u001b[7m1\u001b[0m import config from '../config';\n    \u001b[7m \u001b[0m \u001b[91m       ~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\crypto\\hybrid\\HybridEncryption.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m24\u001b[0m:\u001b[93m70\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'WhaleSignalProcessing' is not assignable to parameter of type 'PoseidonSystem'.\n      Type 'WhaleSignalProcessing' is missing the following properties from type 'PoseidonSystem': processor, ecosystemStatus, ADAPTATION_THRESHOLD, STABILITY_THRESHOLD, and 29 more.\n\n    \u001b[7m24\u001b[0m         sonarSystem = new SonarEnhancementSystem(whaleCommandSystem, processor);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                     ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 6 arguments, but got 4.\n\n    \u001b[7m26\u001b[0m         whaleSupreme = new WhaleSupreme(poseidon, processor, sonarSystem, sleepSystem);\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/WhaleSupreme.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m9\u001b[0m\n        \u001b[7m68\u001b[0m         sonarSystem: SonarEnhancementSystem,\n        \u001b[7m  \u001b[0m \u001b[96m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'sonarSystem' was not provided.\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m30\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'dispose' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m30\u001b[0m         whaleSupreme.dispose();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m42\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m42\u001b[0m         const status = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m56\u001b[0m         const initialStatus = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                           ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m58\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m58\u001b[0m         const finalStatus = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m76\u001b[0m         const status = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m94\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m94\u001b[0m         const status = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m131\u001b[0m         const initialStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSupreme.integration.test.ts\u001b[0m:\u001b[93m136\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m136\u001b[0m                 const finalStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\WhaleSupreme.integration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/integration/WhaleSleepSystem.integration.test.ts\u001b[0m:\u001b[93m36\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m36\u001b[0m         const whaleSignal: WhaleSignal = { signalType: 'vocal', timestamp: new Date(), frequency: 20 };\n    \u001b[7m  \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSleepSystem.integration.test.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m45\u001b[0m         const whaleSignal: WhaleSignal = { signalType: 'vocal', timestamp: new Date(), frequency: 20 };\n    \u001b[7m  \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\WhaleSleepSystem.integration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m263\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m263\u001b[0m         if (adjustments.temperature) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m70\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m264\u001b[0m             this.ecosystemStatus.environmentalMetrics.temperature += adjustments.temperature;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                     ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m266\u001b[0m         if (adjustments.depth) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m267\u001b[0m             this.ecosystemStatus.environmentalMetrics.depth += adjustments.depth;\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m269\u001b[0m         if (adjustments.salinity) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m270\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m270\u001b[0m             this.ecosystemStatus.environmentalMetrics.salinity += adjustments.salinity;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m277\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m277\u001b[0m         if (changes.species) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m278\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m278\u001b[0m             this.ecosystemStatus.populationMetrics.totalSpecies = changes.species.length;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m280\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m280\u001b[0m         if (changes.count) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m281\u001b[0m:\u001b[93m71\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m281\u001b[0m             this.ecosystemStatus.populationMetrics.totalIndividuals = changes.count;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                      ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m283\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m283\u001b[0m         if (changes.distribution) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m284\u001b[0m             changes.distribution.forEach((value, key) => {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m73\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'number' is not assignable to parameter of type 'string'.\n\n    \u001b[7m285\u001b[0m                 this.ecosystemStatus.populationMetrics.distribution.set(key, value);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                        ~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ timestamp: Date; temperature?: number | undefined; salinity?: number | undefined; currentSpeed?: number | undefined; currentDirection?: number | undefined; depth?: number | undefined; waterConditions: WaterConditions; spatialContext: SpatialContext; temporalContext: TemporalContext; socialContext: SocialContext; }' is not assignable to type 'EnvironmentalSignal'.\n      Types of property 'temperature' are incompatible.\n        Type 'number | undefined' is not assignable to type 'number'.\n          Type 'undefined' is not assignable to type 'number'.\n\n    \u001b[7m381\u001b[0m             const updatedSignal: EnvironmentalSignal = {\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\WhaleCommandSystem.integration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m27\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m27\u001b[0m             signalType: 'vocal',\n    \u001b[7m  \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m45\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 20 });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m51\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m51\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 20 });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m64\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 15 });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m78\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m78\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 10 });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m84\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 10 });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; behaviorType: string; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m92\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 10, behaviorType: 'feeding' });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m93\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; behaviorType: string; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m93\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 20, behaviorType: 'migration' });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonWhaleSignal.integration.test.ts\u001b[0m:\u001b[93m94\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ signalType: string; timestamp: Date; frequency: number; behaviorType: string; }' is not assignable to parameter of type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m94\u001b[0m         processor.addWhaleSignal({ signalType: 'vocal', timestamp: new Date(), frequency: 30, behaviorType: 'feeding' });\n    \u001b[7m  \u001b[0m \u001b[91m                                   ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\PoseidonWhaleSignal.integration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m23\u001b[0m:\u001b[93m73\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is not assignable to parameter of type 'AlignmentMetrics'.\n      Type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is missing the following properties from type 'AlignmentMetrics': lawfulAlignment, chaoticAlignment, neutralAlignment\n\n    \u001b[7m23\u001b[0m             const result = await djinnCouncil.enforceAlignmentThreshold(lowAlignment);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                        ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m76\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ variance: number; fluctuation: number; consistency: number; }' is not assignable to parameter of type 'StabilityMetrics'.\n      Property 'systemStability' is missing in type '{ variance: number; fluctuation: number; consistency: number; }' but required in type 'StabilityMetrics'.\n\n    \u001b[7m37\u001b[0m             const result = await djinnCouncil.enforceStabilityRequirements(unstableMetrics);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                           ~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m183\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m183\u001b[0m     systemStability: string;\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~\u001b[0m\n        'systemStability' is declared here.\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m51\u001b[0m:\u001b[93m69\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ rate: number; direction: string; impact: string; }' is not assignable to parameter of type 'EvolutionMetrics'.\n      Type '{ rate: number; direction: string; impact: string; }' is missing the following properties from type 'EvolutionMetrics': adaptationRate, mutationRate, selectionPressure\n\n    \u001b[7m51\u001b[0m             const result = await djinnCouncil.validateEvolutionRate(evolutionMetrics);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ requestsPerSecond: number; queueSize: number; memoryUsage: number; cpuUsage: number; }' is not assignable to parameter of type 'LoadMetrics'.\n      Type '{ requestsPerSecond: number; queueSize: number; memoryUsage: number; cpuUsage: number; }' is missing the following properties from type 'LoadMetrics': cpuLoad, memoryLoad, networkLoad, diskLoad\n\n    \u001b[7m68\u001b[0m             const result = await djinnCouncil.handleExtremeLoad(loadMetrics);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m70\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ affectedServices: string[]; duration: number; impact: string; }' is not assignable to parameter of type 'PartitionScenario'.\n      Property 'affected' is missing in type '{ affectedServices: string[]; duration: number; impact: string; }' but required in type 'PartitionScenario'.\n\n    \u001b[7m82\u001b[0m             const result = await djinnCouncil.handleNetworkPartition(partitionScenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                     ~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m159\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m159\u001b[0m     affected: { service: string }[];\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~\u001b[0m\n        'affected' is declared here.\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m96\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ type: string; affectedData: string[]; severity: string; }' is not assignable to parameter of type 'CorruptionScenario'.\n      Property 'affected' is missing in type '{ type: string; affectedData: string[]; severity: string; }' but required in type 'CorruptionScenario'.\n\n    \u001b[7m96\u001b[0m             const result = await djinnCouncil.handleDataCorruption(corruptionScenario);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                   ~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m164\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m164\u001b[0m     affected: { service: string }[];\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~\u001b[0m\n        'affected' is declared here.\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m147\u001b[0m:\u001b[93m72\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ memory: number; cpu: number; disk: number; connections: number; }' is not assignable to parameter of type 'ResourceMetrics'.\n      Property 'network' is missing in type '{ memory: number; cpu: number; disk: number; connections: number; }' but required in type 'ResourceMetrics'.\n\n    \u001b[7m147\u001b[0m             const result = await djinnCouncil.handleResourceExhaustion(resourceMetrics);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                       ~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m266\u001b[0m     network: number;\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'network' is declared here.\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m182\u001b[0m:\u001b[93m69\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ load: string; stability: string; alignment: number; evolution: string; }' is not assignable to parameter of type 'SystemState'.\n      Type '{ load: string; stability: string; alignment: number; evolution: string; }' is missing the following properties from type 'SystemState': metrics, resources\n\n    \u001b[7m182\u001b[0m             const result = await djinnCouncil.adjustGovernanceRules(systemState);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                    ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m65\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ patterns: string[]; anomalies: string[]; trends: string[]; }' is not assignable to parameter of type 'BehaviorMetrics'.\n      Type '{ patterns: string[]; anomalies: string[]; trends: string[]; }' is missing the following properties from type 'BehaviorMetrics': patternCount, anomalyCount, stabilityScore, evolutionScore, alignmentScore\n\n    \u001b[7m196\u001b[0m             const result = await djinnCouncil.learnFromBehavior(behaviorMetrics);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilGovernance.test.ts\u001b[0m:\u001b[93m199\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'recommendations' does not exist on type '{ adaptations: never[]; predictions: TrendPredictions; }'.\n\n    \u001b[7m199\u001b[0m             expect(result.recommendations).toBeDefined();\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\DjinnCouncilGovernance.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 0.\n\n    \u001b[7m8\u001b[0m         system = new WhaleStewardSystem();\n    \u001b[7m \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/WhaleStewardSystem.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m20\u001b[0m     constructor(riddler: RiddlerExplorerService, steward: Steward) {\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'riddler' was not provided.\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m28\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m28\u001b[0m             expect(history[0].type).toBe('vocal');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m29\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m29\u001b[0m             expect(history[0].content).toEqual(vocalSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m32\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m32\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m74\u001b[0m             expect(history[0].type).toBe('vocal');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m75\u001b[0m             expect(history[1].type).toBe('movement');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m76\u001b[0m             expect(history[2].type).toBe('environmental');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m79\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m79\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m  \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m115\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m115\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m149\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m149\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m196\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m196\u001b[0m             expect(history[0].type).toBe('vocal');\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/WhaleSignalSystem.integration.test.ts\u001b[0m:\u001b[93m246\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m246\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\WhaleSignalSystem.integration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m44\u001b[0m         const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m81\u001b[0m             const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m  \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m103\u001b[0m             const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m122\u001b[0m         const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m159\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m159\u001b[0m             const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m187\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m187\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m239\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m239\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m283\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m283\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m306\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m306\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m348\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m348\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m376\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m376\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m397\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m397\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m420\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m420\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m443\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m443\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m459\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m459\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m476\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m476\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m493\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m493\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m524\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m524\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m542\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m542\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m558\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m558\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/integration/PoseidonMermaidIntegration.test.ts\u001b[0m:\u001b[93m573\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m573\u001b[0m                 const analysis = whaleSteward.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\integration\\PoseidonMermaidIntegration.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/api.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2459: \u001b[0mModule '\"../app\"' declares 'Application' locally, but it is not exported.\n\n    \u001b[7m2\u001b[0m import { Application } from '../app';\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/app.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m7\u001b[0m\n        \u001b[7m13\u001b[0m class Application {\n        \u001b[7m  \u001b[0m \u001b[96m      ~~~~~~~~~~~\u001b[0m\n        'Application' is declared here.\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\api.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m12\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 0.\n\n    \u001b[7m12\u001b[0m         whaleSteward = new WhaleStewardSystem();\n    \u001b[7m  \u001b[0m \u001b[91m                       ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/WhaleStewardSystem.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m20\u001b[0m     constructor(riddler: RiddlerExplorerService, steward: Steward) {\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'riddler' was not provided.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 1 arguments, but got 0.\n\n    \u001b[7m13\u001b[0m         poseidonSystem = new PoseidonSystem();\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m74\u001b[0m     constructor(processor: WhaleSignalProcessing) {\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'processor' was not provided.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2352: \u001b[0mConversion of type '{ signalType: string; confidence: number; impact: number; patterns: { type: string; confidence: number; }[]; }' to type 'WhaleAnalysisResult' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.\n      Type '{ signalType: string; confidence: number; impact: number; patterns: { type: string; confidence: number; }[]; }' is missing the following properties from type 'WhaleAnalysisResult': metadata, timestamp\n\n    \u001b[7m 55\u001b[0m             const analysis: WhaleAnalysisResult = {\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~\u001b[0m\n    \u001b[7m 56\u001b[0m                 signalType: 'song',\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m...\u001b[0m \n    \u001b[7m 62\u001b[0m                 ]\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[7m 63\u001b[0m             } as WhaleAnalysisResult;\n    \u001b[7m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m219\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m219\u001b[0m         const metrics = await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m233\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m233\u001b[0m         const metrics = await monitor.monitorSignalProcessing(invalidSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m251\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m251\u001b[0m             await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m254\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getPerformanceMetrics' does not exist on type 'IntegrationMonitor'. Did you mean 'getErrorMetrics'?\n\n    \u001b[7m254\u001b[0m         const performance = monitor.getPerformanceMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m369\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m369\u001b[0m     getErrorMetrics(): MonitoringMetrics[] {\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~\u001b[0m\n        'getErrorMetrics' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m289\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m289\u001b[0m             await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m326\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m326\u001b[0m             await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m347\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m347\u001b[0m         const metrics = await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m368\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'monitorSignalProcessing' does not exist on type 'IntegrationMonitor'. Did you mean 'trackSignalProcessing'?\n\n    \u001b[7m368\u001b[0m             await monitor.monitorSignalProcessing(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m18\u001b[0m\n        \u001b[7m121\u001b[0m     public async trackSignalProcessing(signal: any): Promise<void> {\n        \u001b[7m   \u001b[0m \u001b[96m                 ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'trackSignalProcessing' is declared here.\n    \u001b[96msrc/tests/monitoring/IntegrationMonitor.test.ts\u001b[0m:\u001b[93m371\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'getPerformanceMetrics' does not exist on type 'IntegrationMonitor'. Did you mean 'getErrorMetrics'?\n\n    \u001b[7m371\u001b[0m         const performance = monitor.getPerformanceMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/monitoring/IntegrationMonitor.ts\u001b[0m:\u001b[93m369\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m369\u001b[0m     getErrorMetrics(): MonitoringMetrics[] {\n        \u001b[7m   \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~\u001b[0m\n        'getErrorMetrics' is declared here.\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\monitoring\\IntegrationMonitor.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m38\u001b[0m:\u001b[93m73\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is not assignable to parameter of type '{ size: number; processingTime: number; errorRate: number; retryRate: number; }'.\n      Type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is missing the following properties from type '{ size: number; processingTime: number; errorRate: number; retryRate: number; }': size, retryRate\n\n    \u001b[7m38\u001b[0m             const alignment = await djinnCouncil.calculateLawfulMetrics(queueMetrics);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                        ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m73\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is not assignable to parameter of type '{ size: number; processingTime: number; errorRate: number; retryRate: number; }'.\n      Type '{ successRate: number; errorRate: number; processingTime: number; queueSize: number; }' is missing the following properties from type '{ size: number; processingTime: number; errorRate: number; retryRate: number; }': size, retryRate\n\n    \u001b[7m55\u001b[0m             const alignment = await djinnCouncil.calculateLawfulMetrics(stressMetrics);\n    \u001b[7m  \u001b[0m \u001b[91m                                                                        ~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'component' implicitly has an 'any' type.\n\n    \u001b[7m67\u001b[0m             componentHealth.components.forEach(component => {\n    \u001b[7m  \u001b[0m \u001b[91m                                               ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m85\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 3 arguments, but got 1.\n\n    \u001b[7m85\u001b[0m             const health = await djinnCouncil.recordComponentHealth(degradedComponent);\n    \u001b[7m  \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m554\u001b[0m:\u001b[93m53\u001b[0m\n        \u001b[7m554\u001b[0m     public recordComponentHealth(component: string, status: string, value: number): void {\n        \u001b[7m   \u001b[0m \u001b[96m                                                    ~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'status' was not provided.\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'status' does not exist on type 'void'.\n\n    \u001b[7m86\u001b[0m             expect(health.status).toBe('degraded');\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m87\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'metrics' does not exist on type 'void'.\n\n    \u001b[7m87\u001b[0m             expect(health.metrics.errorRate).toBe(0.2);\n    \u001b[7m  \u001b[0m \u001b[91m                          ~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 3 arguments, but got 1.\n\n    \u001b[7m112\u001b[0m             const health = await djinnCouncil.recordDependencyHealth(failedDependency);\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m569\u001b[0m:\u001b[93m55\u001b[0m\n        \u001b[7m569\u001b[0m     public recordDependencyHealth(dependency: string, type: string, health: number): void {\n        \u001b[7m   \u001b[0m \u001b[96m                                                      ~~~~~~~~~~~~\u001b[0m\n        An argument for 'type' was not provided.\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m113\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'status' does not exist on type 'void'.\n\n    \u001b[7m113\u001b[0m             expect(health.status).toBe('failed');\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m114\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'error' does not exist on type 'void'.\n\n    \u001b[7m114\u001b[0m             expect(health.error).toBe('Connection timeout');\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m133\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n    \u001b[7m133\u001b[0m             const result = await djinnCouncil.recordDataIntegrity(corruptedData);\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m564\u001b[0m:\u001b[93m50\u001b[0m\n        \u001b[7m564\u001b[0m     public recordDataIntegrity(dataType: string, score: number): void {\n        \u001b[7m   \u001b[0m \u001b[96m                                                 ~~~~~~~~~~~~~\u001b[0m\n        An argument for 'score' was not provided.\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m134\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'integrity' does not exist on type 'void'.\n\n    \u001b[7m134\u001b[0m             expect(result.integrity).toBe(0.5);\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m135\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'errors' does not exist on type 'void'.\n\n    \u001b[7m135\u001b[0m             expect(result.errors).toContain('checksum mismatch');\n    \u001b[7m   \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'handleCascadingFailure' does not exist on type 'DjinnCouncilService'. Did you mean 'handleCascadeFailure'?\n\n    \u001b[7m154\u001b[0m             const result = await djinnCouncil.handleCascadingFailure(failure);\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/DjinnCouncilService.ts\u001b[0m:\u001b[93m681\u001b[0m:\u001b[93m11\u001b[0m\n        \u001b[7m681\u001b[0m     async handleCascadeFailure(scenario: CascadeScenario) {\n        \u001b[7m   \u001b[0m \u001b[96m          ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        'handleCascadeFailure' is declared here.\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m171\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'implementGracefulDegradation' does not exist on type 'DjinnCouncilService'.\n\n    \u001b[7m171\u001b[0m             const result = await djinnCouncil.implementGracefulDegradation(degradation);\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m180\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getEvolutionMetrics' does not exist on type 'DjinnCouncilService'.\n\n    \u001b[7m180\u001b[0m             const evolution = await djinnCouncil.getEvolutionMetrics();\n    \u001b[7m   \u001b[0m \u001b[91m                                                 ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m197\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'recordAdaptation' does not exist on type 'DjinnCouncilService'.\n\n    \u001b[7m197\u001b[0m             const result = await djinnCouncil.recordAdaptation(adaptation);\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m222\u001b[0m:\u001b[93m1\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m222\u001b[0m });\n    \u001b[7m   \u001b[0m \u001b[91m~\u001b[0m\n    \u001b[96msrc/__tests__/DjinnCouncilService.test.ts\u001b[0m:\u001b[93m222\u001b[0m:\u001b[93m2\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1128: \u001b[0mDeclaration or statement expected.\n\n    \u001b[7m222\u001b[0m });\n    \u001b[7m   \u001b[0m \u001b[91m ~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\DjinnCouncilService.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/EmailService.test.ts\u001b[0m:\u001b[93m52\u001b[0m:\u001b[93m20\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2790: \u001b[0mThe operand of a 'delete' operator must be optional.\n\n    \u001b[7m52\u001b[0m             delete emailDataWithoutMetadata.metadata;\n    \u001b[7m  \u001b[0m \u001b[91m                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\EmailService.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/QueueMetricsService.ts\u001b[0m:\u001b[93m98\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'registry' does not exist on type 'Counter<string>'.\n\n    \u001b[7m98\u001b[0m         return this.jobCompletedCounter.registry.metrics();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\QueueMetricsService.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/__tests__/RetryStrategyService.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m50\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 0 arguments, but got 2.\n\n    \u001b[7m8\u001b[0m         retryStrategy = new RetryStrategyService(3, 5000);\n    \u001b[7m \u001b[0m \u001b[91m                                                 ~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\RetryStrategyService.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1052:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/index.js\u001b[2m:1122:165\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\setup.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m37\u001b[0m:\u001b[93m22\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'dispose' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m37\u001b[0m         whaleSupreme.dispose();\n    \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m47\u001b[0m             const status = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m64\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentDecisions' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m64\u001b[0m             const decisions = whaleSupreme.getRecentDecisions(1);\n    \u001b[7m  \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m80\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'respondToEnvironmentalChange' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m80\u001b[0m             whaleSupreme.respondToEnvironmentalChange(envSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m82\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m82\u001b[0m             const status = whaleSupreme.getStatus();\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m103\u001b[0m             const stableStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m108\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m108\u001b[0m             const unstableStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m120\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentAlerts' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m120\u001b[0m             const alerts = whaleSupreme.getRecentAlerts();\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m47\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'alert' implicitly has an 'any' type.\n\n    \u001b[7m121\u001b[0m             const powerAlerts = alerts.filter(alert => alert.alertType === 'power');\n    \u001b[7m   \u001b[0m \u001b[91m                                              ~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentAlerts' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m137\u001b[0m             const alerts = whaleSupreme.getRecentAlerts();\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m138\u001b[0m:\u001b[93m49\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'alert' implicitly has an 'any' type.\n\n    \u001b[7m138\u001b[0m             const ethicalAlerts = alerts.filter(alert => alert.alertType === 'ethical');\n    \u001b[7m   \u001b[0m \u001b[91m                                                ~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentAlerts' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m153\u001b[0m             const alerts = whaleSupreme.getRecentAlerts();\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'alert' implicitly has an 'any' type.\n\n    \u001b[7m154\u001b[0m             const ecologicalAlerts = alerts.filter(alert => alert.alertType === 'ecological');\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m174\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m174\u001b[0m             const initialStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                               ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSupreme.test.ts\u001b[0m:\u001b[93m179\u001b[0m:\u001b[93m54\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getStatus' does not exist on type 'WhaleSupreme'.\n\n    \u001b[7m179\u001b[0m                     const finalStatus = whaleSupreme.getStatus();\n    \u001b[7m   \u001b[0m \u001b[91m                                                     ~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleSupreme.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module '@ioredis/commands' from 'node_modules/ioredis/built/Redis.js'\n\n    Require stack:\n      node_modules/ioredis/built/Redis.js\n      node_modules/ioredis/built/index.js\n      node_modules/bull/lib/queue.js\n      node_modules/bull/index.js\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mQueue\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'bull'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mEmailService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./EmailService'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mQueueMetricsService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./QueueMetricsService'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mRetryStrategyService\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./RetryStrategyService'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/ioredis/built/Redis.js\u001b[2m:3:20)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/ioredis/built/index.js\u001b[2m:4:28)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/bull/lib/queue.js\u001b[2m:3:15)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/bull/index.js\u001b[2m:3:18)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/EmailQueueService.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/EmailQueueService.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\__tests__\\EmailQueueService.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m25\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), frequency: 10 },\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m26\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), frequency: 20 },\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m27\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; frequency: number; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m27\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), frequency: 30 }\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; behaviorType: string; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m47\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), behaviorType: 'feeding' },\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; behaviorType: string; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m48\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), behaviorType: 'feeding' },\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalProcessing.test.ts\u001b[0m:\u001b[93m49\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ signalType: string; timestamp: Date; behaviorType: string; }' is not assignable to type 'WhaleSignal'.\n      Object literal may only specify known properties, and 'signalType' does not exist in type 'WhaleSignal'.\n\n    \u001b[7m49\u001b[0m                 { signalType: 'vocal', timestamp: new Date(), behaviorType: 'migration' }\n    \u001b[7m  \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleSignalProcessing.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m263\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m263\u001b[0m         if (adjustments.temperature) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m264\u001b[0m:\u001b[93m70\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m264\u001b[0m             this.ecosystemStatus.environmentalMetrics.temperature += adjustments.temperature;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                     ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m266\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m266\u001b[0m         if (adjustments.depth) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m267\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m267\u001b[0m             this.ecosystemStatus.environmentalMetrics.depth += adjustments.depth;\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m269\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m269\u001b[0m         if (adjustments.salinity) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m270\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'adjustments' is possibly 'undefined'.\n\n    \u001b[7m270\u001b[0m             this.ecosystemStatus.environmentalMetrics.salinity += adjustments.salinity;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m277\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m277\u001b[0m         if (changes.species) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m278\u001b[0m:\u001b[93m67\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m278\u001b[0m             this.ecosystemStatus.populationMetrics.totalSpecies = changes.species.length;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                  ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m280\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m280\u001b[0m         if (changes.count) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m281\u001b[0m:\u001b[93m71\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m281\u001b[0m             this.ecosystemStatus.populationMetrics.totalIndividuals = changes.count;\n    \u001b[7m   \u001b[0m \u001b[91m                                                                      ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m283\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m283\u001b[0m         if (changes.distribution) {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m284\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'changes' is possibly 'undefined'.\n\n    \u001b[7m284\u001b[0m             changes.distribution.forEach((value, key) => {\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m285\u001b[0m:\u001b[93m73\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'number' is not assignable to parameter of type 'string'.\n\n    \u001b[7m285\u001b[0m                 this.ecosystemStatus.populationMetrics.distribution.set(key, value);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                        ~~~\u001b[0m\n    \u001b[96msrc/services/PoseidonSystem.ts\u001b[0m:\u001b[93m381\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ timestamp: Date; temperature?: number | undefined; salinity?: number | undefined; currentSpeed?: number | undefined; currentDirection?: number | undefined; depth?: number | undefined; waterConditions: WaterConditions; spatialContext: SpatialContext; temporalContext: TemporalContext; socialContext: SocialContext; }' is not assignable to type 'EnvironmentalSignal'.\n      Types of property 'temperature' are incompatible.\n        Type 'number | undefined' is not assignable to type 'number'.\n          Type 'undefined' is not assignable to type 'number'.\n\n    \u001b[7m381\u001b[0m             const updatedSignal: EnvironmentalSignal = {\n    \u001b[7m   \u001b[0m \u001b[91m                  ~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleSleepSystem.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m28\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n      Type 'TranslatedWhaleSignal' is missing the following properties from type 'TranslationResult': translatedText, confidence, emotionalTone, context, sentiment\n\n    \u001b[7m28\u001b[0m             feedbackLoop.processFeedback(translatedSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m57\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n\n    \u001b[7m57\u001b[0m                 feedbackLoop.processFeedback(translatedSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n\n    \u001b[7m84\u001b[0m                 feedbackLoop.processFeedback(translatedSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m116\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '{ content: { frequency: number; signalType: string; duration: number; intensity: number; timestamp: Date; }; type: \"vocal\" | \"movement\" | \"environmental\"; systemInterpretation: string; timestamp: Date; }' is not assignable to parameter of type 'TranslationResult'.\n      Type '{ content: { frequency: number; signalType: string; duration: number; intensity: number; timestamp: Date; }; type: \"vocal\" | \"movement\" | \"environmental\"; systemInterpretation: string; timestamp: Date; }' is missing the following properties from type 'TranslationResult': translatedText, confidence, emotionalTone, context, sentiment\n\n    \u001b[7m116\u001b[0m                 feedbackLoop.processFeedback(signal);\n    \u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m140\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n\n    \u001b[7m140\u001b[0m             feedbackLoop.processFeedback(highImpactSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n\n    \u001b[7m160\u001b[0m             feedbackLoop.processFeedback(lowImpactSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                                         ~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleSignalFeedbackLoop.test.ts\u001b[0m:\u001b[93m184\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'TranslatedWhaleSignal' is not assignable to parameter of type 'TranslationResult'.\n\n    \u001b[7m184\u001b[0m                 feedbackLoop.processFeedback(invalidSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleSignalFeedbackLoop.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 0.\n\n    \u001b[7m8\u001b[0m         system = new WhaleStewardSystem();\n    \u001b[7m \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/services/WhaleStewardSystem.ts\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m17\u001b[0m\n        \u001b[7m20\u001b[0m     constructor(riddler: RiddlerExplorerService, steward: Steward) {\n        \u001b[7m  \u001b[0m \u001b[96m                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'riddler' was not provided.\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m24\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m24\u001b[0m             expect(history[0].type).toBe('vocal');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m25\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m25\u001b[0m             expect(history[0].content).toEqual(vocalSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m40\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m40\u001b[0m             expect(history[0].type).toBe('movement');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m41\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m41\u001b[0m             expect(history[0].content).toEqual(movementSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'type' does not exist on type 'TranslationResult'.\n\n    \u001b[7m55\u001b[0m             expect(history[0].type).toBe('environmental');\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m56\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m56\u001b[0m             expect(history[0].content).toEqual(environmentalSignal);\n    \u001b[7m  \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m99\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentSignalsByType' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m99\u001b[0m             const vocalHistory = system.getRecentSignalsByType('vocal');\n    \u001b[7m  \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m103\u001b[0m:\u001b[93m44\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getRecentSignalsByType' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m103\u001b[0m             const movementHistory = system.getRecentSignalsByType('movement');\n    \u001b[7m   \u001b[0m \u001b[91m                                           ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'getSignalPatterns' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m124\u001b[0m             const patterns = system.getSignalPatterns();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m138\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'analyzeWhaleData' does not exist on type 'WhaleStewardSystem'.\n\n    \u001b[7m138\u001b[0m             const analysis = system.analyzeWhaleData();\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m161\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m161\u001b[0m             expect(history[0].content).toEqual(highImpactSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n    \u001b[96msrc/tests/WhaleStewardSystem.test.ts\u001b[0m:\u001b[93m177\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'content' does not exist on type 'TranslationResult'. Did you mean 'context'?\n\n    \u001b[7m177\u001b[0m             expect(history[0].content).toEqual(lowConfidenceSignal);\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m71\u001b[0m     context: {\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~\u001b[0m\n        'context' is declared here.\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleStewardSystem.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m112\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '\"English\"' is not assignable to type 'SupportedLanguage'.\n\n    \u001b[7m112\u001b[0m         options: TranslationOptions = { targetLanguage: 'English' }\n    \u001b[7m   \u001b[0m \u001b[91m                                        ~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/types/translation.ts\u001b[0m:\u001b[93m81\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m81\u001b[0m     targetLanguage: SupportedLanguage;\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~\u001b[0m\n        The expected type comes from property 'targetLanguage' which is declared here on type 'TranslationOptions'\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m40\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'emotionalState' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m121\u001b[0m         const emotionalState = options.emotionalState || 'neutral';\n    \u001b[7m   \u001b[0m \u001b[91m                                       ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m46\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'environmentalContext' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m122\u001b[0m         const environmentalContext = options.environmentalContext || 'unknown';\n    \u001b[7m   \u001b[0m \u001b[91m                                             ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m13\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '{ type: \"vocal\" | \"movement\" | \"environmental\"; content: WhaleVocalSignal | WhaleMovementPattern | WhaleEnvironmentalData; ... 4 more ...; emotionalTone: EmotionalTone; }' is not assignable to type 'TranslatedWhaleSignal'.\n      Object literal may only specify known properties, but 'context' does not exist in type 'TranslatedWhaleSignal'. Did you mean to write 'content'?\n\n    \u001b[7m129\u001b[0m             context: options.includeContext ? this.extractContext(signal, vocabularyEntry) : undefined,\n    \u001b[7m   \u001b[0m \u001b[91m            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType '\"neutral\"' is not assignable to type 'EmotionalTone'.\n\n    \u001b[7m154\u001b[0m         return 'neutral';\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m188\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'emotionalState' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m188\u001b[0m         if (options.emotionalState) {\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m189\u001b[0m:\u001b[93m85\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'emotionalState' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m189\u001b[0m             adjustedMessage = this.adjustForEmotionalState(adjustedMessage, options.emotionalState);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                    ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m193\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'environmentalContext' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m193\u001b[0m         if (options.environmentalContext) {\n    \u001b[7m   \u001b[0m \u001b[91m                    ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/services/WhaleTranslationTool.ts\u001b[0m:\u001b[93m194\u001b[0m:\u001b[93m91\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'environmentalContext' does not exist on type 'TranslationOptions'.\n\n    \u001b[7m194\u001b[0m             adjustedMessage = this.adjustForEnvironmentalContext(adjustedMessage, options.environmentalContext);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                          ~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\WhaleTranslationTool.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './maps/america' from 'node_modules/@colors/colors/lib/colors.js'\n\n    Require stack:\n      node_modules/@colors/colors/lib/colors.js\n      node_modules/@colors/colors/safe.js\n      node_modules/logform/colorize.js\n      node_modules/logform/levels.js\n      node_modules/logform/index.js\n      node_modules/winston/lib/winston.js\n      src/utils/logger.ts\n      src/services/RiddlerExplorer.ts\n      src/tests/RiddlerExplorer.test.ts\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m winston \u001b[36mfrom\u001b[39m \u001b[32m'winston'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m winston\u001b[33m.\u001b[39mcreateLogger({\n     \u001b[90m 4 |\u001b[39m     level\u001b[33m:\u001b[39m \u001b[32m'info'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/lib/colors.js\u001b[2m:198:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/safe.js\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/colorize.js\u001b[2m:3:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/levels.js\u001b[2m:3:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/index.js\u001b[2m:16:18)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/winston/lib/winston.js\u001b[2m:10:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/utils/logger.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/services/RiddlerExplorer.ts\u001b[2m:2:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/tests/RiddlerExplorer.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\RiddlerExplorer.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './maps/america' from 'node_modules/@colors/colors/lib/colors.js'\n\n    Require stack:\n      node_modules/@colors/colors/lib/colors.js\n      node_modules/@colors/colors/safe.js\n      node_modules/logform/colorize.js\n      node_modules/logform/levels.js\n      node_modules/logform/index.js\n      node_modules/winston/lib/winston.js\n      src/utils/logger.ts\n      src/services/TemporalIsolation.ts\n      src/tests/TemporalIsolationConcurrent.test.ts\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m winston \u001b[36mfrom\u001b[39m \u001b[32m'winston'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m winston\u001b[33m.\u001b[39mcreateLogger({\n     \u001b[90m 4 |\u001b[39m     level\u001b[33m:\u001b[39m \u001b[32m'info'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/lib/colors.js\u001b[2m:198:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/safe.js\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/colorize.js\u001b[2m:3:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/levels.js\u001b[2m:3:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/index.js\u001b[2m:16:18)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/winston/lib/winston.js\u001b[2m:10:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/utils/logger.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/services/TemporalIsolation.ts\u001b[2m:3:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/tests/TemporalIsolationConcurrent.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\TemporalIsolationConcurrent.test.ts","startTime":1750200904747,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1750200904747,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Cannot find module './maps/america' from 'node_modules/@colors/colors/lib/colors.js'\n\n    Require stack:\n      node_modules/@colors/colors/lib/colors.js\n      node_modules/@colors/colors/safe.js\n      node_modules/logform/colorize.js\n      node_modules/logform/levels.js\n      node_modules/logform/index.js\n      node_modules/winston/lib/winston.js\n      src/utils/logger.ts\n      src/services/TemporalIsolation.ts\n      src/tests/TemporalIsolation.test.ts\n\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m winston \u001b[36mfrom\u001b[39m \u001b[32m'winston'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 2 |\u001b[39m\n     \u001b[90m 3 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m logger \u001b[33m=\u001b[39m winston\u001b[33m.\u001b[39mcreateLogger({\n     \u001b[90m 4 |\u001b[39m     level\u001b[33m:\u001b[39m \u001b[32m'info'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22mnode_modules/jest-resolve/build/index.js\u001b[2m:868:11)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/lib/colors.js\u001b[2m:198:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/@colors/colors/safe.js\u001b[2m:9:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/colorize.js\u001b[2m:3:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/levels.js\u001b[2m:3:23)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/logform/index.js\u001b[2m:16:18)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/winston/lib/winston.js\u001b[2m:10:17)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/utils/logger.ts\u001b[2m:1:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/services/TemporalIsolation.ts\u001b[2m:3:1)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/tests/TemporalIsolation.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n","name":"P:\\Jeff Stuff\\temporal_edition\\src\\tests\\TemporalIsolation.test.ts","startTime":1750200904747,"status":"failed","summary":""}],"wasInterrupted":false}
